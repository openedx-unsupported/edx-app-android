// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        jcenter()       // This is the default repo
        mavenCentral()  //  This is the Maven Central repo
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.2'
        classpath 'com.google.gms:google-services:3.0.0'
    }
}

project.ext {
    BUILD_TOOLS_VERSION = "23.0.3"

    // dummy keystore configuration if not already defined
    if ( !project.properties.containsKey("RELEASE_STORE_FILE")) {
        RELEASE_STORE_FILE = "edx-android-release-key.keystore"
        RELEASE_STORE_PASSWORD = "*****"
        RELEASE_KEY_ALIAS = "edx-android-release"
        RELEASE_KEY_PASSWORD = "*****"
    }
}
// task that creates 'artifacts' directory
task createBuildArtifactsDirectory << { task ->
    def hashPipe = new ByteArrayOutputStream()
    task.project.exec {
        commandLine = ['git', 'rev-parse', '--verify', 'HEAD']
        standardOutput = hashPipe
    }

    def destDir = "artifacts"
    task.project.exec {
        commandLine = ['mkdir', '-p', destDir]
    }
}

// Copies unit test reports to the 'artifacts' directory
task copyUnitTestBuildArtifacts << { task ->
    // copy unit test reports
    def srcPath = "OpenEdXMobile/build/reports"
    task.project.exec {
        commandLine = ['cp', '-R', srcPath, 'artifacts']
    }
}
copyUnitTestBuildArtifacts.dependsOn createBuildArtifactsDirectory

// Copies lint report to the 'artifacts' directory
task copyLintBuildArtifacts(type: Copy) {
    from 'OpenEdXMobile/build/outputs'
    into 'artifacts'
    include 'lint-results*'
    include 'lint-results*/**'
}
copyLintBuildArtifacts.dependsOn createBuildArtifactsDirectory

// Copies acceptance test reports to the 'artifacts' directory
task copyAcceptanceTestBuildArtifacts << { task ->
    // copy acceptance test reports
    srcPath = "AcceptanceTests/Test-Reports"
    task.project.exec {
        commandLine = ['cp', '-R', srcPath, 'artifacts']
    }
}
copyAcceptanceTestBuildArtifacts.dependsOn createBuildArtifactsDirectory


// Disables preDex which reduces the amount of memory required to build an APK. This is important
// for CI where there is a memory limit. PreDex is also not useful in CI where a new build is
// desired on every run.
project.ext.preDexLibs = !project.hasProperty('disablePreDex')

subprojects {
    project.plugins.whenPluginAdded { plugin ->
        if ("com.android.build.gradle.AppPlugin".equals(plugin.class.name)) {
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
        } else if ("com.android.build.gradle.LibraryPlugin".equals(plugin.class.name)) {
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
        }
    }
}

// Increases adb timeout for installing an apk. This tweak is need for slow adb installs on an
// emulator for CI.
com.android.ddmlib.DdmPreferences.setTimeOut(600000)
